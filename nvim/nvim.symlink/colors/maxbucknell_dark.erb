<%
    # RNB, A VIM COLORSCHEME TEMPLATE
    # Author:        Romain Lafourcade (https://github.com/romainl)
    # Canonical URL: https://gist.github.com/romainl/5cd2f4ec222805f49eca

    # This template is designed to help vimmers create their own colorschemes
    # without much effort.
    #
    # You will need Ruby to generate your colorscheme but Ruby knowledge is
    # not needed at all.
    #
    # The process is divided in four steps:
    #   1. start by editing your colorscheme's information,
    #   2. define your colors,
    #   3. define your highlight groups and links,
    #   4. and generate your colorscheme.

    # Step 1: information
    #
    # Make sure the name of your colorscheme is unique and attractive.
    # The description should fit in a single line with no linefeed.
    # 'background' can be "light" or "dark".
    information = {
        author:      "Max Bucknell",
        email:       "me@maxbucknell.com",
        name:        "maxbucknell_light",
        description: "My colour scheme, bruh.",
        background:  "light",
        webpage:     "https://github.com/maxbucknell/dotfiles"
    }

    # ANSI Dark colours, picked with hue, 80% saturation, 80% brightness
    # ANSI Light colours, picked with hue, 20% saturation, 93% brightness
    darkred     = ["#CC4129", 1, "darkred"] # 9º
    red         = ["#ECC4BD", 9, "red"]

    darkgreen   = ["#4FCC29", 2, "darkgreen"] # 106º
    green       = ["#C8ECBD", 10, "green"]

    # Actually orange
    darkorange  = ["#CC7229", 3, "darkyellow"] # 27º
    orange = ["#EDD3BE", 15, "white"]

    darkyellow  = ["#CCC129", 3, "darkyellow"] # 56º
    yellow = ["#EDEABE", 15, "white"]

    darkblue    = ["#29A1CC", 4, "darkblue"] # 196º
    blue = ["#BEE0EC", 15, "white"]

    darkmagenta = ["#CC29C9", 5, "darkmagenta"] # 301º
    magenta = ["#ECBCEB", 15, "white"]

    darkcyan    = ["#29CCBA", 6, "darkcyan"] # 173º
    cyan = ["#ADD3BE", 14, "cyan"]

    grey = [
        ["#ECE9ED", 15, "white"],
        ["#DFDDE0", 15, "white"],
        ["#D2CFD3", 15, "white"],
        ["#C6C3C7", 15, "white"],
        ["#B7AFB9", 15, "white"],
        ["#9E92A1", 15, "white"],
        ["#806D87", 15, "white"],
        ["#67556E", 15, "white"],
        ["#4D3A54", 15, "white"],
        ["#331E3B", 15, "white"],
        ["#1A0821", 15, "white"],
    ]

    background = grey[10]
    foreground = grey[0]

    error = red
    warning = yellow
    info = orange
    hint = blue

    search = green
    symbol = magenta

    # Step 3: highlights
    #
    # You can define highlight groups like this:
    #
    #   [ "Normal",       name of the highlight group
    #     white,          the color used for background color, or use "NONE", "fg" or "bg"
    #     darkgray,       the color used for foreground color, or use "NONE", "fg" or "bg"
    #     "NONE"          style, can be "bold", "underline", "reverse", "italic",
    #                     "standout", "NONE" or "undercurl"
    #   ]
    #
    # The sample above tells Vim to render normal text in dark gray against a white
    # background, without any styling.
    #
    # or link an highlight group to another:
    #
    #   [ "Title", "Normal" ]
    #
    # In GUI Vim, there is an additional color for the undercurl used to
    # highlight spelling mistakes:
    #
    #   [ "SpellBad",     name of the highlight group
    #     "NONE",         the color used for background color, or use "NONE", "fg" or "bg"
    #     red,            the color used for foreground color, or use "NONE", "fg" or "bg"
    #     "undercurl",    style
    #     red             color used for the undercurl
    #   ]
    #
    # The sample above tells Vim to render badly spelled words in red against the current
    # background, with a red undercurl.
    #
    # You can add any custom highlight group to the standard list below but you shouldn't
    # remove any if you want a working colorscheme.
    highlights = [
        [ "Normal", background, foreground, "NONE" ],
        [ "NormalFloat", background, foreground, "NONE" ],
        [ "NormalNC", grey[8], foreground, "NONE"],
        [ "NonText", "NONE", "NONE", "NONE" ],
        [ "Comment", "NONE", "NONE", "bold" ],
        [ "Constant", "NONE", "NONE", "NONE" ],
        [ "Error", "NONE", "NONE", "NONE" ],
        [ "CocErrorHighlight", darkred, error, "NONE" ],
        [ "CocErrorSign", darkred, red, "NONE" ],
        [ "CocWarningSign", darkyellow, yellow, "NONE" ],
        [ "CocHintSign", darkblue, blue, "NONE" ],
        [ "CocInfoSign", darkorange, orange, "NONE" ],
        [ "CocErrorVirtualText", "NONE", darkred, "NONE" ],
        [ "CocWarningVirtualText", "NONE", darkyellow, "NONE" ],
        [ "CocHintVirtualText", "NONE", darkblue, "NONE" ],
        [ "CocInfoVirtualText", "NONE", darkorange, "NONE" ],
        [ "CocWarningHighlight", darkyellow, warning, "NONE" ],
        [ "CocInfoHighlight", darkorange, info, "NONE" ],
        [ "CocHintHighlight", darkblue, hint, "NONE" ],
        [ "CocHighlightText", darkmagenta, symbol, "NONE" ],
        [ "CocCodeLens", "NONE", grey[7] ],
        [ "Identifier", "NONE", "NONE", "NONE" ],
        [ "Ignore", "NONE", "NONE", "NONE" ],
        [ "PreProc", "NONE", "NONE", "NONE" ],
        [ "Special", "NONE", "NONE", "NONE" ],
        [ "Statement", "NONE", "NONE", "NONE" ],
        [ "String", "Constant" ],
        [ "Number", "Constant" ],
        [ "Todo", "NONE", "NONE" "NONE" ],
        [ "Type", "NONE", "NONE", "NONE" ],
        [ "Underlined", "NONE", "NONE", "NONE" ],
        [ "StatusLine", grey[9], "NONE", "NONE" ],
        [ "StatusLineNC", grey[7], "NONE", "NONE" ],
        [ "VertSplit", "NONE", grey[3], "NONE" ],
        [ "TabLine", "NONE", "NONE", "NONE" ],
        [ "TabLineFill", "NONE", "NONE", "NONE" ],
        [ "TabLineSel", "NONE", "NONE", "NONE" ],
        [ "Title", "NONE", "NONE", "NONE" ],
        [ "CursorLine", grey[9], "NONE", "NONE" ],
        [ "LineNr", "NONE", "NONE", "NONE" ],
        [ "CursorLineNr", "NONE", "NONE", "NONE" ],
        [ "helpLeadBlank", "NONE", "NONE", "NONE" ],
        [ "helpNormal", "NONE", "NONE", "NONE" ],
        [ "Visual", blue, "NONE", "NONE" ],
        [ "VisualNOS", blue, "NONE", "NONE" ],
        [ "Pmenu", foreground, darkblue, "NONE" ],
        [ "PmenuSbar", "NONE", "NONE", "NONE" ],
        [ "PmenuSel", blue, background, "NONE" ],
        [ "PmenuThumb", "NONE", "NONE", "NONE" ],
        [ "FoldColumn", "NONE", "NONE", "NONE" ],
        [ "Folded", "NONE", "NONE", "NONE" ],
        [ "WildMenu", "NONE", "NONE", "NONE" ],
        [ "SpecialKey", "NONE", "NONE", "NONE" ],
        [ "DiffAdd", "NONE", "NONE", "NONE" ],
        [ "DiffChange", "NONE", "NONE", "NONE" ],
        [ "DiffDelete", "NONE", "NONE", "NONE" ],
        [ "DiffText", "NONE", "NONE", "NONE" ],
        [ "IncSearch", "NONE", green, "bold" ],
        [ "Search", darkgreen, green, "NONE" ],
        [ "Directory", "NONE", "NONE", "NONE" ],
        [ "MatchParen", darkmagenta, magenta, "NONE" ],
        [ "SpellBad", "NONE", "NONE", "NONE"],
        [ "SpellCap", "NONE", "NONE", "NONE"],
        [ "SpellLocal", "NONE", "NONE", "NONE"],
        [ "SpellRare", "NONE", "NONE", "NONE"],
        [ "ColorColumn", "NONE", "NONE", "NONE" ],
        [ "SignColumn", grey[9], "NONE", "NONE" ],
        [ "ErrorMsg", "NONE", "NONE", "NONE" ],
        [ "ModeMsg", "NONE", "NONE", "NONE" ],
        [ "MoreMsg", "NONE", "NONE", "NONE" ],
        [ "Question", "NONE", "NONE", "NONE" ],
        [ "WarningMsg", "Error" ],
        [ "Cursor", "NONE", "NONE", "NONE" ],
        [ "CursorColumn", "NONE", "NONE", "NONE" ],
        [ "QuickFixLine", "NONE", "NONE", "NONE" ],
        [ "StatusLineTerm", background, "NONE", "NONE" ],
        [ "StatusLineTermNC", background, "NONE", "NONE" ],
        [ "RainbowLevel1", grey[1], "NONE", "NONE" ],
        [ "RainbowLevel3", grey[1], "NONE", "NONE" ],
        [ "RainbowLevel5", grey[1], "NONE", "NONE" ],
        [ "RainbowLevel7", grey[1], "NONE", "NONE" ],
        [ "RainbowLevel9", grey[1], "NONE", "NONE" ],
        [ "RainbowLevel11", grey[1], "NONE", "NONE" ],
        [ "RainbowLevel13", grey[1], "NONE", "NONE" ],
        [ "RainbowLevel15", grey[1], "NONE", "NONE" ],
    ]

    # Define the color palette used by :terminal when in GUI Vim
    # or in TUI Vim when 'termguicolors' is enabled. If this list
    # is empty or if it doesn't contain exactly 16 items, the corresponding
    # Vim variable won't be set.
    #
    # The expected values are colors defined in step 2.
    terminal_ansi_colors = [
        grey[0],
        darkred,
        darkgreen,
        darkyellow,
        darkblue,
        darkmagenta,
        darkcyan,
        grey[10],
        grey[3],
        red,
        green,
        yellow,
        blue,
        magenta,
        cyan,
        grey[8]
    ]

    # Step 4: generation
    #
    # From a separate shell:
    #
    #     $ erb -T - bar.erb > bar.vim
    #
    # From Vim:
    #
    #     :!erb -T - % > %<.vim

    # These online resources can help you design your colorscheme:
    #
    #   * http://upload.wikimedia.org/wikipedia/en/1/15/Xterm_256color_chart.svg
    #         the xterm palette
    #   * http://whatcolor.herokuapp.com/
    #         play with hexadecimal colors right in the address bar (currently down)
    #   * http://color.hailpixel.com/
    #         similar concept, fuzzier implementation
    #   * http://colourco.de/
    #         similar concept, fancier implementation
    #   * http://www.colr.org/
    #         extract a palette from an image
    #   * http://colores.manugarri.com/
    #         search for 'word', get images and color palettes
    #   * http://www.colourlovers.com/palettes
    #         user-created palettes
    #   * http://www.perbang.dk/color+scheme/
    #         a no-nonsense colorscheme generator
    #   * https://color.adobe.com/
    #         Adobe's fancy colorscheme generator
    #   * http://paletton.com/
    #         The classic 'Color Scheme Designer', rebranded
    #   * http://vrl.cs.brown.edu/color
    #         A very smart palette generator
    #   * https://cmcenroe.me/2018/04/03/colour-scheme.html
    #         "I Made My Own Colour Scheme and You Can Too!"

    # A few general advices:
    #
    #   * The Windows console is limited to the 16 so-called "ANSI" colors but it has
    #     a few of them interverted which makes numbers impractical. Use color names
    #     instead of numbers: :help cterm-colors
    #   * The Windows console (yeah…) doesn't do italics, underlines or bolded text;
    #     it is limited to normal and reverse. Keep that in mind if you want
    #     your colorscheme to be usable in as many environments as possible by as many
    #     people as possible.
    #   * All of the terminal emulators in use these days allow their users to
    #     change the 16 so-called "ANSI" colors. It is also possible on some platforms
    #     to change some or all of the 256 colors in the xterm palette. Don't take
    #     anything for granted.
    #   * When used against a light background, strong colors work better than muted
    #     ones. Light or dark doesn't really matters. Also, it is harder to discriminate
    #     between two similar colors on a light background.
    #   * Both strong and muted colors work well against a dark background. It is also
    #     easier to work with similar colors, but dark colors don't work at all.
    #   * Use as many text samples as possible. String-heavy languages may look completely
    #     different than keyword-heavy ones. This can have an impact on the usability
    #     of your colorscheme.
    #   * Most terminal emulators and terminal multiplexers currently in use on unix-like
    #     systems support 256 colors but they almost always default to a '$TERM' that tells
    #     Vim otherwise. Your users will need to make sure their terminal emulator/multiplexer
    #     is correctly set up if they want to enjoy the best possible experience.

    # Many thanks to Barry Arthur (https://github.com/dahu) for the original idea.

    # You don't need to edit anything beyond this line.
-%>
" <%= information[:name] %>.vim -- Vim color scheme.
" Author:      <%= information[:author] %> (<%= information[:email] %>)
" Webpage:     <%= information[:webpage] %>
" Description: <%= information[:description] %>

hi clear

if exists("syntax_on")
  syntax reset
endif

let colors_name = "<%= information[:name].downcase %>"

if ($TERM =~ '256' || &t_Co >= 256) || has("gui_running")
<% for highlight in highlights -%>
<% if highlight.length == 4 -%>
    hi <%= highlight[0] %> ctermbg=<%= highlight[1].kind_of?(String) ? highlight[1] : highlight[1][1] %> ctermfg=<%= highlight[2].kind_of?(String) ? highlight[2] : highlight[2][1] %> cterm=<%= highlight[3] %> guibg=<%= highlight[1].kind_of?(String) ? highlight[1] : highlight[1][0] %> guifg=<%= highlight[2].kind_of?(String) ? highlight[2] : highlight[2][0] %> gui=<%= highlight[3] %>
<% if highlight[0] == "Normal" -%>
<%= '' %>
    set background=<%= information[:background] %>
<%= '' %>
<% end -%>
<% elsif highlight.length > 4 -%>
    hi <%= highlight[0] %> ctermbg=<%= highlight[1].kind_of?(String) ? highlight[1] : highlight[1][1] %> ctermfg=<%= highlight[2].kind_of?(String) ? highlight[2] : highlight[2][1] %> cterm=<%= highlight[3] %> guibg=<%= highlight[1].kind_of?(String) ? highlight[1] : highlight[1][0] %> guifg=<%= highlight[2].kind_of?(String) ? highlight[2] : highlight[2][0] %> gui=<%= highlight[3] %> guisp=<%= highlight[4].kind_of?(String) ? highlight[4] : highlight[4][0] %>
<% end -%>
<% end -%>

elseif &t_Co == 8 || $TERM !~# '^linux' || &t_Co == 16
    set t_Co=16
<%= '' %>
<% for highlight in highlights -%>
<% if highlight.length > 2 -%>
    hi <%= highlight[0] %> ctermbg=<%= highlight[1].kind_of?(String) ? highlight[1] : highlight[1][2] %> ctermfg=<%= highlight[2].kind_of?(String) ? highlight[2] : highlight[2][2] %> cterm=<%= highlight[3] %>
<% if highlight[0] == "Normal" -%>
<%= '' %>
    set background=<%= information[:background] %>
<%= '' %>
<% end -%>
<% end -%>
<% end -%>
endif
<% links = highlights.select do |highlight| -%>
<% highlight.length == 2 -%>
<% end -%>
<% if links.length > 0 -%>
<%= '' %>
<% for link in links -%>
hi link <%= link[0] %> <%= link[1] %>
<% end -%>
<% end -%>
<% if terminal_ansi_colors.length == 16 -%>
<%= '' %>
let g:terminal_ansi_colors = [
<% for color in terminal_ansi_colors -%>
        \ '<%= color[0] %>',
<% end -%>
        \ ]
<% end -%>



" Generated with RNB (https://gist.github.com/romainl/5cd2f4ec222805f49eca)
